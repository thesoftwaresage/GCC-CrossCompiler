on:
  push:
    branches:
      - main

name: Azure VM Workflow

env:
  AZURE_VM_IMAGE: Canonical:UbuntuServer:20.04-LTS:latest
  AZURE_VM_SIZE: B1s

jobs:
  create-vm:
    runs-on: ubuntu-latest
    steps:
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Create VM
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az vm create \
            --resource-group QUANTI_1 \
            --name qzncgcccrossbuild \
            --image ${{ env.AZURE_VM_IMAGE }} \
            --size ${{ env.AZURE_VM_SIZE }} \
            --admin-username azureuser \
            --generate-ssh-keys

    - name: Run command on VM
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az vm run-command invoke \
            --resource-group QUANTI_1 \
            --name qzncgcccrossbuild \
            --command-id RunShellScript \
            --scripts "echo 'Hello, World!'"

    - name: Stop VM
      uses: azure/CLI@v1
      with:
        inlineScript: |
          az vm stop \
            --resource-group QUANTI_1 \
            --name qzncgcccrossbuild


# name: Build GCC-CrossCompiler Docker Image
#
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
# 
# jobs:
# 
#   build:
# 
#     runs-on: ubuntu-latest
# 
#     steps:
#     - uses: actions/checkout@v3
#     - name: Build the Docker image
#       run: docker build -t tss-crosscomp-dev-env --build-arg commit_name=${{ secrets.COMMIT_NAME }} --build-arg commit_token=${{ secrets.COMMIT_TOKEN }} --build-arg buildSha=${{ github.sha }} --build-arg buildref=${{ github.ref }} .
# 
#     - name: Upload Cross Compiler Artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: cross-compiler
#         path: /usr/local/cross/
